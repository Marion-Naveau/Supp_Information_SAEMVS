### Description of reproducible codes for "Bayesian high-dimensional covariate selection in non-linear mixed-effects models using 
the SAEM algorithm" Naveau et al.

This folder contains the R codes needed to reproduce the results of the article.
The Data folder contains the data of the real dataset used in the paper.
The R folder contains the R functions.
The Saves folder contains all the saves needed to reproduce the figures.

## Scripts for Sections 3 and 4:

App_SAEMVS_ex.Rmd: This file contains an application of SAEMVS on a detailed example in an one-dimensional setting. This file needs the functions that are listed in R/Functions_SAEMVS.R

R/Function_SAEMVS.R: This file contains all the functions needed to run the SAEMVS procedure on the detailed example, that is:
- SAEM_MAP: function that corresponds to the MCMC-SAEM algorithm presented in section 3 which allows to calculate the MAP estimator, Algorithm 1, appendix A.1. This function takes as input (niter, nburnin, niterMH_phi, Y, t, id, V_tilde, param_init, hyperparam, s) where all these parameters are defined above and s is the seed. It returns beta_tilde a $(p+1)\times$(niter+1) matrix where columns are the MAP estimation vector of $\tilde{\beta}$ over the iterations, and Gamma2, sigma2, alpha are vectors of size niter+1 containing the MAP estimates of $\Gamma^2$, $\sigma^2$ and $\alpha$, respectively, during the iterations.
* p_star: function used in SAEM_MAP and which corresponds to equation (9) in the paper that is the the conditional expectation of $\delta$ knowing $(\varphi,y,\Theta^{(k)})$. It takes as input $(\beta^{(k)},\alpha^{(k)},\nu_0,\nu_1,p)$ and returns this conditional expectation.
- g: function that corresponds to the logistic growth model.
* SAEM_EMV: function that corresponds to the MCMC-SAEM algorithm which calculates the MLE needed to determine the value of the eBIC criterion. It takes as input the same parameters as SAEM_MAP except hyperparam, that corresponds here to a list that contains $\psi$ and $\tau$, and we also put in input $I$, which is a set of indices $\ell$ such that $\tilde{\beta}_{\ell} \neq 0$. This function returns for each parameter its maximum likelihood estimator.
- Model_selection: function that corresponds to the proposed variable selection procedure SAEM-VS, Algorithm 2 in appendix A.2. It takes as input (Delta, niter, nburnin, niterMH_phi, Y, t, id, V_tilde, param_init, hyperparam, s), where Delta is the grid of nu0 values. This function returns a list that contains a graph with the regularisation plot and the value of the eBIC criterion, the selected model (the set of selected covariates), the values of the MAP estimates $\hat{\tilde{\beta}}$, $\hat{\Gamma^2}$ and $\hat{\sigma^2}$ for the selected model, the selected $\nu_0$, the values of the MAP estimates of each parameters for each value of $\nu_0$ in the grid, and the a posteriori inclusion probability of each covariates knowing $\hat{\Theta}$ for each value of $\nu_0$.


## Scripts for Section 5: Numerical experiments

R/Simul_data_comp.R: This file contains a script that simulates the 100 data-sets used in the comparison study in section 5.1

R/Functions_SAEMVS_multi.R: This file contains all the functions needed to run the SAEMVS procedure on the simulation study model used to compare SAEMVS with a two-step approach in section 5.1.

Fig1.R: Script to reproduce Figure 1

FigA1.R: Script to reproduce Figure A1

R/Functions_SAEMVS_simu.R: This file contains all the functions needed to run the SAEMVS procedure on the simulation study model used to detail the influence of the parameters in section 5.2.

Fig2.R: Script to reproduce Figure 2

Fig3.R: Script to reproduce Figure 3

Computation_time_MCMC-SAEM.R: Script to determine the computation time of MCMC-SAEM in the case that is presented in the sub-section 5.4

Computation_time_MCMC.R: Script to determine the computation time of an MCMC procedure in the case that is presented in the sub-section 5.4. This file needs the functions that are listed in nimble_fit_functions.R

R/nimble_fit_functions.R: This file contains functions required for the efficient C++ implementation of a random walk adaptive MCMC used in Sub-section 5.4 through the Nimble software.

Fig4.R: Script to reproduce Figure 4

Test_Simu_SAEMVS.R: This file allows to combine the functions of the file "Functions_SAEMVS_simu.R" to launch the SAEMVS method on the model as presented in the simulation study Section 5.2 on one simulated data-set.


## Scripts for Section 6: Application to plant senescence genetic marker identification

Fig5.R: Script to reproduce Figure 5

Fig6.R: Script to reproduce Figure 6. This file needs the functions that are listed in Functions_SAEMVS_real_data.R

R/Functions_SAEMVS_real_data.R: This file contains all the functions needed to run the SAEMVS procedure on the real dataset presented in Section 6, that is all the functions present in Functions_SAEMVS but adapted according to Section 6.

FigB2.R: Script to reproduce Figure 6


## Data and Rdata

Data/13INRmon_NUE_LN.csv: dataframe containing the observed data

Data/carte_Axiom-TABW420k_WGAv1.csv: dataframe containing the position on the genome of each SNP, data_chromosome$V1: chromosome, data_chromosome$V2: position on the chromosome, data_chromosome$name: name of the SNP

Data/GenesMajeursFloraison.csv: dataframe containing the position on the genome of each flowering gene

Data/genotypeFilterPlink_100_5_0.8.csv: dataframe containing the value of each covariate (that is the SNPs) for each variety

Data/marker_HD_INRmon13LN.csv: list of heading QTLs names

Data/resPCOAdf.Rds: the first 5 principal components of a PCA performed on the available SNPs in the model

Finally, all the Rdata files provided allow the reader to reproduce the figures without the need to run the full code.

